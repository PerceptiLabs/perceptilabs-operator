#!/usr/bin/env bash


if [ $# -lt 1 ]; then
  echo "USAGE: $0 <version>"
  echo "example: $0 1.0.3"
  exit 1
fi


VERSION=$1
APP_NAME=perceptilabs-operator
DEST_LEAF=${APP_NAME}.${VERSION}
YAMLS_DEST=operator_metadata_for_rh/yamls
ZIPS_DEST=operator_metadata_for_rh/zips
DEST_PACKAGE=${YAMLS_DEST}/${APP_NAME}.package.yaml
DEST_ZIP=operator_metadata_for_rh/zips/${DEST_LEAF}.zip
OLM_CATALOG_DIR=deploy/olm-catalog
APP_DIR=${OLM_CATALOG_DIR}/${APP_NAME}
PACKAGE_FILE=${APP_DIR}/${APP_NAME}.package.yaml
VERSIONED_DIR=${APP_DIR}/${VERSION}
RH_REGISTRY=registry.connect.redhat.com/perceptilabs
OP_REPO="${RH_REGISTRY}/perceptilabs-operator"
FE_REPO="${RH_REGISTRY}/perceptilabs-frontend-1"
CORE_REPO="${RH_REGISTRY}/perceptilabs-core-1"
DEST_CSV="${YAMLS_DEST}/${APP_NAME}.v${VERSION}.clusterserviceversion.yaml"
OLD_VERSION=$(yq r "${DEST_PACKAGE}" 'channels(name==stable).currentCSV' | sed "s/${APP_NAME}.v\(.*\)/\1/")

if [ -z "${OLD_VERSION}" ];  then
  echo "Couldn't pull the old version from the package file"
  exit 1
fi

if [ "${OLD_VERSION}" == "${VERSION}" ]; then
  echo "New version is the same as the old version: ${VERSION}"
  exit 1
fi

PREV_CSV="${YAMLS_DEST}/${APP_NAME}.v${OLD_VERSION}.clusterserviceversion.yaml"
if [ ! -f "${PREV_CSV}" ]; then
  echo "The previous csv (${PREV_CSV}) isn't in the directory"
  exit 1
fi

cp ${PACKAGE_FILE} ${YAMLS_DEST}
cp ${VERSIONED_DIR}/* ${YAMLS_DEST}
sed -i "" "s|quay.io/perceptilabs/perceptilabs-operator|${OP_REPO}|g" ${DEST_CSV}
sed -i "" "s|quay.io/perceptilabs/frontend-ubi8|${FE_REPO}|g" ${DEST_CSV}
sed -i "" "s|quay.io/perceptilabs/core-ubi7|${CORE_REPO}|g" ${DEST_CSV}
yq w --inplace ${DEST_CSV} spec.replaces ${APP_NAME}.v${OLD_VERSION}

pushd ${YAMLS_DEST}
  zip -q temp.zip *.yaml
popd
mv ${YAMLS_DEST}/temp.zip ${DEST_ZIP}
