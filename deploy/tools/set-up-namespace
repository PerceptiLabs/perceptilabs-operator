#!/usr/bin/env bash

if [ -z "${NS}" ]; then echo Missing NS variable; exit 1; fi
if [ -z "${PL_DOCKER_PWD}" ]; then echo Missing PL_DOCKER_PWD variable; exit 1; fi
if [ -z "${SA_NAME}" ]; then echo Missing SA_NAME variable; exit 1; fi

TOOLS_DIR="$(dirname $0)"
apply_tools_script(){
  echo -n "$2 ..."
  envsubst < "${TOOLS_DIR}/$1" | oc apply -f -
  if [ $? != 0 ]; then echo failed; exit 1; fi
}

apply_tools_script namespace.yaml "Creating namespace ${NS}"
apply_tools_script persistentvolume.yaml "Creating persistent volume in ${NS}"

oc get secret -n your-ns perceptilabs-docker &>/dev/null
if [ $? != 0 ]; then
  echo -n "Creating secret perceptilabs-docker"
  oc create secret docker-registry perceptilabs-docker --namespace=${NS} --docker-server=perceptilabs.azurecr.io --docker-username=perceptilabs --docker-password=${PL_DOCKER_PWD}
  if [ $? != 0 ]; then echo failed; exit 1; fi
fi

apply_tools_script sa.yaml "Creating serviceaccount ${SA_NAME}"
apply_tools_script subscription.yaml "Creating subscription to perceptilabs-operator-beta"

get_pod(){
  sleep 1
  oc get pods --namespace=${NS} -o name | grep perceptilabs-operator-
  return $?
}

echo -n Waiting for pod to start ...
POD=$(get_pod)
while [ -z ${POD} ]; do
  echo -n .
  POD=$( get_pod )
done
echo done. Pod name is ${POD}


get_pod_status(){
  sleep 1
  oc get  --namespace=${NS} $1 | tail -n 1 | awk '{print $3}'
}

echo Waiting for ${POD} to enter Running state ...
STATUS=$(get_pod_status ${POD})
while [ "${STATUS}" != "Running" ]; do
  echo "   ${STATUS}"
  STATUS=$(get_pod_status ${POD})
done

get_logs(){
  sleep 1
  oc logs $1 --namespace=${NS} -c operator | grep -i "starting to serve" &>/dev/null
  return $?
}

echo -n Waiting for pod to serve ...
get_logs ${POD}
while [ $? != 0 ]; do
  echo -n .
  get_logs ${POD}
done
echo done

echo -n "Creating Perceptilabs instance in ${NS} ..."
envsubst < "${TOOLS_DIR}/start-instance.yaml" | oc apply -f -
if [ $? != 0 ]; then echo failed; exit 1; fi
echo done

get_route(){
  sleep 1
  oc get route --namespace=${NS} perceptilabs-frontend -o jsonpath="{.spec.host}" 2>/dev/null
  return $?
}

echo -n Waiting for route ...
ROUTE=$(get_route)
while [ $? != 0 ]; do
  echo -n .
  ROUTE=$(get_route)
done
echo done
echo "Frontend is available at ${ROUTE}"
